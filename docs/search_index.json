[["index.html", "Chlorine adoption survey 1 Introduction", " Chlorine adoption survey Development Innovation Lab 2025-07-23 1 Introduction THIS IS A WORK IN PROGRESS This document shows exploratory analysis results for the chlorine adoption surveys conducted in Malawi and Uganda. "],["water-point-census.html", "2 Water point census 2.1 Field observations 2.2 Number of water points found 2.3 Type of water points 2.4 Number of water points per village 2.5 Water point functionality rate 2.6 Share of paid water points 2.7 DSW water points", " 2 Water point census Code library(stringr) library(sf) library(tidyverse) 2.1 Field observations In some villages, the promoters filled the dispenser after they saw the FOs inspecting it There is one DSW village that has an ILC device. The community guide reported that the ILC is operated by an organization called “Salvation” Code wp_census &lt;- read_rds( file.path( path_box, &quot;Data&quot;, &quot;WaterPointCensus&quot;, &quot;DataSets&quot;, &quot;Final&quot;, &quot;wp-census.rds&quot; ) ) %&gt;% st_drop_geometry 2.2 Number of water points found Code wp_census %&gt;% select(wp_func, wp_dsw, wp_ilc_device, wp_ilc) %&gt;% mutate( dsw_func = case_when(wp_dsw == 1 ~ wp_func), ilcwp_func = case_when(wp_ilc_device == 1 ~ wp_func), ilcwcp_func = case_when(wp_ilc == 1 ~ wp_func), ) %&gt;% summarise( wp_n = n(), across( c( dsw_n = wp_dsw, ilcwp_n = wp_ilc_device, ilcwcp_n = wp_ilc ), ~ sum(., na.rm = TRUE) ), across( ends_with(&quot;func&quot;), ~ (mean(., na.rm = TRUE) * 100) %&gt;% round(1) ) ) %&gt;% pivot_longer( cols = everything(), names_pattern = &quot;(.*)_(.*)&quot;, names_to = c(&quot;type&quot;, &quot;.value&quot;) ) %&gt;% set_names(c(&quot; &quot;, &quot;N&quot;, &quot;Percent functioning&quot;)) %&gt;% mutate( ` ` = c(&quot;All water points&quot;, &quot;DSW&quot;, &quot;ILC water points&quot;, &quot;ILC water collection points&quot;) ) ## # A tibble: 4 × 3 ## ` ` N `Percent functioning` ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 All water points 288 84.7 ## 2 DSW 113 95.6 ## 3 ILC water points 11 81.8 ## 4 ILC water collection points 14 85.7 2.3 Type of water points 2.3.1 All water points Code wp_census %&gt;% group_by(sourcetype, wp_ilc_device, wp_dsw, wp_ilc) %&gt;% summarise( n = n() ) %&gt;% mutate( ea = case_when( wp_ilc_device ~ &quot;ILC water point&quot;, wp_ilc ~ &quot;ILC water collection point&quot;, wp_dsw ~ &quot;DSW&quot;, TRUE ~ &quot;Non-program&quot; ) ) %&gt;% group_by(sourcetype) %&gt;% mutate( total = sum(n), # sourcetype = reorder(sourcetype, total, order = TRUE) ) %&gt;% ggplot( aes( y = sourcetype, x = n, fill = ea ) ) + geom_col() + geom_text( aes( x = total, label = total ), size = 3, hjust = 1.2, color = &quot;white&quot; ) + theme + scale_fill_viridis_d() + labs( y = NULL, x = &quot;Number of sources&quot;, fill = NULL ) 2.3.2 Program water points Code wp_census %&gt;% mutate( ea = case_when( wp_ilc_device ~ &quot;ILC&quot;, wp_ilc ~ &quot;ILC water collection point&quot;, wp_dsw ~ &quot;DSW&quot; ) ) %&gt;% dplyr::filter(!is.na(ea)) %&gt;% group_by(sourcetype, ea) %&gt;% summarise(n = n()) %&gt;% group_by(ea) %&gt;% mutate( total = sum(n), pct = (n/total) * 100 ) %&gt;% ggplot( aes( y = sourcetype, x = pct, fill = ea, label = pct %&gt;% round(1) ) ) + geom_col() + geom_text( aes(color = ea), size = 3, hjust = 1.2 ) + facet_wrap(~ ea) + theme + scale_fill_viridis_d() + scale_color_viridis_d(direction = -1) + labs( y = NULL, x = &quot;Percent of sources&quot;, fill = NULL ) 2.4 Number of water points per village Code wp_census %&gt;% group_by(village_id) %&gt;% summarise( `Water points` = n(), `DSW water points` = sum(wp_dsw, na.rm = TRUE) %&gt;% na_if(0), `ILC water points` = sum(wp_ilc_device, na.rm = TRUE) %&gt;% na_if(0), `ILC water collection points` = sum(wp_ilc, na.rm = TRUE) %&gt;% na_if(0) ) %&gt;% summarise( across( - village_id, ~ mean(., na.rm = TRUE), .names = &quot;Average_{.col}&quot; ), across( - village_id, ~ min(., na.rm = TRUE), .names = &quot;Minimum_{.col}&quot; ), across( - village_id, ~ max(., na.rm = TRUE), .names = &quot;Maximum_{.col}&quot; ) , across( - village_id, ~ sum(!is.na(.), na.rm = TRUE), .names = &quot;N_{.col}&quot; ) ) %&gt;% pivot_longer( cols = everything(), names_pattern = &quot;(.*)_(.*)&quot;, names_to = c(&quot;.value&quot;, &quot;Type&quot;) ) %&gt;% select( Type, N, Average, Minimum, Maximum ) %&gt;% rename( `Number of villages` = N ) ## # A tibble: 4 × 5 ## Type `Number of villages` Average Minimum Maximum ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; ## 1 Water points 38 7.58 1 34 ## 2 DSW water points 35 3.23 1 10 ## 3 ILC water points 4 2.75 1 5 ## 4 ILC water collection points 5 2.8 1 5 2.5 Water point functionality rate Overall: 84.7% DSW: 95.6% ILC water points: 81.8% ILC water collection points: 85.7% 2.6 Share of paid water points Overall: NA% DSW: NA% ILC water points: NA% ILC water collection points: NA% 2.7 DSW water points Code dsw &lt;- wp_census %&gt;% dplyr::filter(wp_dsw == 1) 2.7.1 Functionality Code dsw %&gt;% summarise( across( c( `Water point is functional` = wp_func, `Casing is present` = disp_casing_present, `PVC pole is present` = disp_pvc_pole_present, `Tank is present` = disp_tank_present, `Valve is working (conditional on tank being present)` = jc_valve, `Dispenser is not empty (conditional on valve working)` = jc_chlorine ), ~ (mean(., na.rm = TRUE) * 100) %&gt;% round(1), .names = &quot;{.col}_Percent&quot; ), across( c( `Water point is functional` = wp_func, `Casing is present` = disp_casing_present, `PVC pole is present` = disp_pvc_pole_present, `Tank is present` = disp_tank_present, `Valve is working (conditional on tank being present)` = jc_valve, `Dispenser is not empty (conditional on valve working)` = jc_chlorine ), ~ sum(!is.na(.)), .names = &quot;{.col}_N Obs&quot; ), across( c( `Water point is functional` = wp_func, `Casing is present` = disp_casing_present, `PVC pole is present` = disp_pvc_pole_present, `Tank is present` = disp_tank_present, `Valve is working (conditional on tank being present)` = jc_valve, `Dispenser is not empty (conditional on valve working)` = jc_chlorine ), ~ sum(., na.rm = TRUE), .names = &quot;{.col}_Count&quot; ) ) %&gt;% pivot_longer( everything(), names_pattern = &quot;(.*)_(.*)&quot;, names_to = c(&quot; &quot;, &quot;.value&quot;) ) %&gt;% select(&quot; &quot;, `N Obs`, Count, Percent) ## # A tibble: 6 × 4 ## ` ` `N Obs` Count Percent ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Water point is functional 113 108 95.6 ## 2 Casing is present 109 109 100 ## 3 PVC pole is present 109 109 100 ## 4 Tank is present 109 106 97.2 ## 5 Valve is working (conditional on tank being present) 94 94 100 ## 6 Dispenser is not empty (conditional on valve working) 94 71 75.5 2.7.2 Chlorine dosage Code dsw %&gt;% ggplot( aes( x = jc_mldispensed, fill = as.factor(jc_mllost) ) ) + geom_vline( xintercept = 2.8, color = &quot;gray&quot;, linetype = &quot;dashed&quot; ) + geom_vline( xintercept = 3.2, color = &quot;gray&quot;, linetype = &quot;dashed&quot; ) + geom_histogram() + scale_fill_viridis_d() + theme + labs( y = &quot;Number of dispensers&quot;, x = &quot;Chlorine dose (mL)&quot;, fill = &quot;Some chlorine leaked out of the calibrated cylinder&quot; ) 2.7.3 Chlorine residual distribution Code dsw %&gt;% select( `Color wheel_TCR` = disctcr_c, `Color wheel_FCR` = discfcr_c, Colorimeter_TCR = metertcr_c, Colorimeter_FCR = meterfcr_c ) %&gt;% pivot_longer( cols = everything(), names_pattern = &quot;(.*)_(.*)&quot;, names_to = c(&quot;instrument&quot;, &quot;test&quot;) ) %&gt;% ggplot( aes( x = value, fill = instrument ) ) + scale_fill_viridis_d() + geom_histogram() + facet_grid(test ~ instrument) + theme + labs( x = &quot;Chlorine residual reading (mg/L)&quot;, y = &quot;Number of tests&quot; ) + theme(legend.position = &quot;none&quot;) "],["water-point-chlorine-residual-tests.html", "3 Water point chlorine residual tests 3.1 Color wheel and colorimeter readings 3.2 TCR and FCR readings 3.3 Dosage and chlorine residual 3.4 Wait time and chlorine residual 3.5 Reported color and chlorine residual 3.6 Water source type and chlorine residual 3.7 Source type and chlorine residual 3.8 Turbidity and chlorine residual 3.9 Colorimeter IDs and chlorine residual 3.10 Color disc IDs and chlorine residual 3.11 Enumerator IDs and chlorine residual", " 3 Water point chlorine residual tests Code library(stringr) library(sf) library(tidyverse) library(modelsummary) library(fixest) Code wp_test &lt;- read_rds( file.path( path_box, &quot;Data&quot;, &quot;WaterPointCensus&quot;, &quot;DataSets&quot;, &quot;Constructed&quot;, &quot;wp-chlorine.rds&quot; ) ) %&gt;% rename_with( ~ .x %&gt;% str_replace_all(&quot;meter&quot;, &quot;meter_&quot;) %&gt;% str_replace_all(&quot;disc&quot;, &quot;disc_&quot;) %&gt;% str_replace_all(&quot;cr_c$&quot;, &quot;cr&quot;) ) %&gt;% dplyr::filter(!is.na(country), !is.na(disc_fcr)) 3.1 Color wheel and colorimeter readings Code wp_test %&gt;% select(wp_id, matches(&quot;(.)cr$&quot;)) %&gt;% pivot_longer( cols = -wp_id, names_pattern = &quot;(.*)_(.*)&quot;, names_to = c(&quot;.value&quot;, &quot;test&quot;) ) %&gt;% mutate( test = str_to_upper(test) ) %&gt;% ggplot( aes( x = meter, y = disc, color = test ) ) + geom_abline( slope = 1, color = &quot;gray80&quot; ) + geom_abline( slope = 1, intercept = 0.2, color = &quot;gray80&quot;, linetype = &quot;dashed&quot; ) + geom_abline( slope = 1, intercept = -0.2, color = &quot;gray80&quot;, linetype = &quot;dashed&quot; ) + geom_abline( slope = 1, color = &quot;gray80&quot; ) + geom_point(position = &quot;jitter&quot;) + theme + facet_wrap(~ test) + labs( x = &quot;Colorimeter reading (mg/L)&quot;, y = &quot;Color wheel reading (mg/L)&quot;, color = NULL ) + scale_color_viridis_d() 3.2 TCR and FCR readings Code wp_test %&gt;% select(wp_id, matches(&quot;_(.)cr$&quot;)) %&gt;% pivot_longer( cols = -wp_id, names_pattern = &quot;(.*)_(.*)&quot;, names_to = c(&quot;test&quot;, &quot;.value&quot;) ) %&gt;% mutate( test = case_when(test == &quot;meter&quot; ~ &quot;Colorimeter&quot;, TRUE ~ &quot;Color wheel&quot;) ) %&gt;% rename( TCR = tcr, FCR = fcr ) %&gt;% ggplot( aes( x = FCR, y = TCR, color = test ) ) + geom_abline( slope = 1, color = &quot;gray80&quot; ) + geom_abline( slope = 1, intercept = -0.1, color = &quot;gray80&quot;, linetype = &quot;dashed&quot; ) + geom_abline( slope = 1, intercept = -0.2, color = &quot;gray80&quot;, linetype = &quot;dotted&quot; ) + geom_abline( slope = 1, color = &quot;gray80&quot; ) + geom_point(position = &quot;jitter&quot;) + theme + facet_wrap(~ test) + scale_color_viridis_d() + theme(legend.position = &quot;none&quot;) 3.3 Dosage and chlorine residual Code map( c(&quot;disc_tcr&quot;, &quot;disc_fcr&quot;, &quot;meter_tcr&quot;, &quot;meter_fcr&quot;), ~ lm( paste(.x, &quot; ~ jc_mldispensed + jc_mllost&quot;) %&gt;% as.formula, data = wp_test ) ) %&gt;% set_names( c( &quot;Color wheel TCR&quot;, &quot;Color wheel FCR&quot;, &quot;Colorimeter TCR&quot;, &quot;Colorimeter FCR&quot; ) ) %&gt;% modelsummary( stars = TRUE, gof_omit = &quot;IC|Log|RMSE|R2$&quot; ) .table td.tinytable_css_vwfw3g6x3hz2lp65em2j, .table th.tinytable_css_vwfw3g6x3hz2lp65em2j { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_vtrtauqkxayijct9wsaq, .table th.tinytable_css_vtrtauqkxayijct9wsaq { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_vbymkrculw96ix1fx3nz, .table th.tinytable_css_vbymkrculw96ix1fx3nz { text-align: center; } .table td.tinytable_css_kb141zxfj5gw0uc0qe62, .table th.tinytable_css_kb141zxfj5gw0uc0qe62 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_hx3b2d2u4y26imt0hvp6, .table th.tinytable_css_hx3b2d2u4y26imt0hvp6 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dn990lw1sp4n1d03lf4m, .table th.tinytable_css_dn990lw1sp4n1d03lf4m { text-align: left; } .table td.tinytable_css_4vww0efa8c2cunoxivi5, .table th.tinytable_css_4vww0efa8c2cunoxivi5 { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_1h1z0y23p0dtni44jlk7, .table th.tinytable_css_1h1z0y23p0dtni44jlk7 { text-align: center; border-bottom: solid black 0.05em; } Color wheel TCR Color wheel FCR Colorimeter TCR Colorimeter FCR + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 (Intercept) 0.006 -0.313 0.871 0.336 (0.429) (0.322) (0.751) (0.518) jc_mldispensed 0.362* 0.366*** 0.135 0.282+ (0.138) (0.103) (0.246) (0.167) jc_mllost -0.134 -0.006 -0.223 -0.177 (0.131) (0.098) (0.149) (0.136) Num.Obs. 69 69 64 65 R2 Adj. 0.103 0.144 0.036 0.082 F 4.900 6.712 3.4 Wait time and chlorine residual Code map( c( &quot;disc_tcr ~ disc_fcr_dur_wait&quot;, &quot;disc_fcr ~ disc_tcr_dur_wait&quot;, &quot;meter_tcr ~ meter_fcr_dur_wait&quot;, &quot;meter_fcr ~ meter_tcr_dur_wait&quot; ), ~ lm( as.formula(.x), data = wp_test ) ) %&gt;% set_names( c( &quot;Color wheel TCR&quot;, &quot;Color wheel FCR&quot;, &quot;Colorimeter TCR&quot;, &quot;Colorimeter FCR&quot; ) ) %&gt;% modelsummary( stars = TRUE, gof_omit = &quot;IC|Log|RMSE|R2$&quot; ) .table td.tinytable_css_trvyic01zgwn1ln0vus7, .table th.tinytable_css_trvyic01zgwn1ln0vus7 { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_rkni4e2tgp7gfvda5d00, .table th.tinytable_css_rkni4e2tgp7gfvda5d00 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_pu2g8dnos9f1tn25ueg4, .table th.tinytable_css_pu2g8dnos9f1tn25ueg4 { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_pmtxerzoeqw0y8a7bwbu, .table th.tinytable_css_pmtxerzoeqw0y8a7bwbu { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_pfeig6j49565urs6snab, .table th.tinytable_css_pfeig6j49565urs6snab { text-align: center; } .table td.tinytable_css_ooqyv7nrrj5nurk0fezc, .table th.tinytable_css_ooqyv7nrrj5nurk0fezc { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_mmcoqftoqpzotpf72d85, .table th.tinytable_css_mmcoqftoqpzotpf72d85 { text-align: left; } .table td.tinytable_css_1c6z7z46kx4har9bz8fq, .table th.tinytable_css_1c6z7z46kx4har9bz8fq { text-align: center; border-bottom: solid black 0.05em; } Color wheel TCR Color wheel FCR Colorimeter TCR Colorimeter FCR + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 (Intercept) 0.840*** 0.615*** 1.045*** 0.747*** (0.096) (0.118) (0.084) (0.110) disc_fcr_dur_wait 0.001 (0.001) disc_tcr_dur_wait 0.000 (0.000) meter_fcr_dur_wait 0.000 (0.001) meter_tcr_dur_wait 0.001* (0.000) Num.Obs. 91 91 81 83 R2 Adj. -0.005 -0.008 -0.009 0.039 F 0.557 0.317 0.269 4.322 3.5 Reported color and chlorine residual Code map( c( &quot;disc_tcr ~ disc_fcr_color&quot;, &quot;disc_fcr ~ disc_tcr_color&quot;, &quot;meter_tcr ~ meter_fcr_color&quot;, &quot;meter_fcr ~ meter_tcr_color&quot; ), ~ lm( as.formula(.x), data = wp_test ) ) %&gt;% set_names( c( &quot;Color wheel TCR&quot;, &quot;Color wheel FCR&quot;, &quot;Colorimeter TCR&quot;, &quot;Colorimeter FCR&quot; ) ) %&gt;% modelsummary( stars = TRUE, gof_omit = &quot;IC|Log|RMSE|R2$&quot; ) .table td.tinytable_css_wn3nd469wt4lb2olfkrn, .table th.tinytable_css_wn3nd469wt4lb2olfkrn { text-align: center; } .table td.tinytable_css_udnd25hwvm8od6hst7i3, .table th.tinytable_css_udnd25hwvm8od6hst7i3 { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_tzwjvm8n8dwamnjnmc51, .table th.tinytable_css_tzwjvm8n8dwamnjnmc51 { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_m28cw5yxq2nmwll59jg8, .table th.tinytable_css_m28cw5yxq2nmwll59jg8 { text-align: left; } .table td.tinytable_css_jh2yg572g2baee3aaw4p, .table th.tinytable_css_jh2yg572g2baee3aaw4p { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_hwht9ru243gqmvrc25is, .table th.tinytable_css_hwht9ru243gqmvrc25is { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_5hr3i9obsbx54ix43m6g, .table th.tinytable_css_5hr3i9obsbx54ix43m6g { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_41z2z1f9yadzbur97vlm, .table th.tinytable_css_41z2z1f9yadzbur97vlm { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Color wheel TCR Color wheel FCR Colorimeter TCR Colorimeter FCR + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 (Intercept) 0.015 0.000 0.291* 0.031 (0.126) (0.103) (0.143) (0.126) disc_fcr_color2 - Pale pink 0.574*** (0.166) disc_fcr_color3 - Pink 1.066*** (0.144) disc_fcr_color4 - Bright pink (or darker) 1.410*** (0.170) disc_tcr_color2 - Pale pink 0.364* (0.149) disc_tcr_color3 - Pink 0.705*** (0.117) disc_tcr_color4 - Bright pink (or darker) 1.069*** (0.125) meter_fcr_color2 - Pale pink 0.006 (0.254) meter_fcr_color3 - Pink 0.841*** (0.176) meter_fcr_color4 - Bright pink (or darker) 1.035*** (0.166) meter_tcr_color2 - Pale pink -0.011 (0.272) meter_tcr_color3 - Pink 0.751*** (0.154) meter_tcr_color4 - Bright pink (or darker) 1.235*** (0.140) Num.Obs. 91 91 81 83 R2 Adj. 0.479 0.471 0.381 0.538 F 28.578 27.675 17.390 32.882 3.6 Water source type and chlorine residual Code map( c( &quot;disc_tcr ~ disc_fcr_color&quot;, &quot;disc_fcr ~ disc_tcr_color&quot;, &quot;meter_tcr ~ meter_fcr_color&quot;, &quot;meter_fcr ~ meter_tcr_color&quot; ), ~ lm( as.formula(.x), data = wp_test ) ) %&gt;% set_names( c( &quot;Color wheel TCR&quot;, &quot;Color wheel FCR&quot;, &quot;Colorimeter TCR&quot;, &quot;Colorimeter FCR&quot; ) ) %&gt;% modelsummary( stars = TRUE, gof_omit = &quot;IC|Log|RMSE|R2$&quot; ) .table td.tinytable_css_yuw5zlmq2ygxws343nrl, .table th.tinytable_css_yuw5zlmq2ygxws343nrl { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_v7z0wyjq3v7hd4nhx4iv, .table th.tinytable_css_v7z0wyjq3v7hd4nhx4iv { text-align: center; } .table td.tinytable_css_lso79l003q0ihe2g5hl3, .table th.tinytable_css_lso79l003q0ihe2g5hl3 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_kgj3856javz47b7u1qws, .table th.tinytable_css_kgj3856javz47b7u1qws { text-align: left; } .table td.tinytable_css_k594qzbwnzbbgaugiq32, .table th.tinytable_css_k594qzbwnzbbgaugiq32 { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_f26evk1m12w9phvkmytc, .table th.tinytable_css_f26evk1m12w9phvkmytc { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5j7mhuu47s2ja0dlkoth, .table th.tinytable_css_5j7mhuu47s2ja0dlkoth { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_041hvnnrgoyw49kju8c3, .table th.tinytable_css_041hvnnrgoyw49kju8c3 { text-align: center; border-bottom: solid #d3d8dc 0.1em; } Color wheel TCR Color wheel FCR Colorimeter TCR Colorimeter FCR + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 (Intercept) 0.015 0.000 0.291* 0.031 (0.126) (0.103) (0.143) (0.126) disc_fcr_color2 - Pale pink 0.574*** (0.166) disc_fcr_color3 - Pink 1.066*** (0.144) disc_fcr_color4 - Bright pink (or darker) 1.410*** (0.170) disc_tcr_color2 - Pale pink 0.364* (0.149) disc_tcr_color3 - Pink 0.705*** (0.117) disc_tcr_color4 - Bright pink (or darker) 1.069*** (0.125) meter_fcr_color2 - Pale pink 0.006 (0.254) meter_fcr_color3 - Pink 0.841*** (0.176) meter_fcr_color4 - Bright pink (or darker) 1.035*** (0.166) meter_tcr_color2 - Pale pink -0.011 (0.272) meter_tcr_color3 - Pink 0.751*** (0.154) meter_tcr_color4 - Bright pink (or darker) 1.235*** (0.140) Num.Obs. 91 91 81 83 R2 Adj. 0.479 0.471 0.381 0.538 F 28.578 27.675 17.390 32.882 3.7 Source type and chlorine residual Add graph of chlorine residual distribution by type of water source 3.8 Turbidity and chlorine residual Code wp_test %&gt;% ggplot( aes( x = wp_turbidity, fill = wp_turbidity ) ) + geom_bar() + scale_fill_viridis_d() + theme + labs( y = &quot;Number of water points&quot;, x = &quot;Turbidity (1 = Clear, 5 = Very turbid)&quot; ) + theme( legend.position = &quot;none&quot; ) Code map( c( &quot;disc_diff_c ~ wp_turbidity&quot;, &quot;meter_diff_c ~ wp_turbidity&quot; ), ~ lm( as.formula(.x), data = wp_test ) ) %&gt;% set_names( c( &quot;Color wheel difference&quot;, &quot;Colorimeter difference&quot; ) ) %&gt;% modelsummary( stars = TRUE, gof_omit = &quot;IC|Log|RMSE|R2$&quot; ) .table td.tinytable_css_udhhr1knpfh4cmrunao2, .table th.tinytable_css_udhhr1knpfh4cmrunao2 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_p97ej0ia7wgze168xtbi, .table th.tinytable_css_p97ej0ia7wgze168xtbi { text-align: left; } .table td.tinytable_css_mo4nkuivp1adj60z3p2w, .table th.tinytable_css_mo4nkuivp1adj60z3p2w { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_l2jqf5qxezpfd16rswjg, .table th.tinytable_css_l2jqf5qxezpfd16rswjg { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_k6t5uxxpgcjs62ms4cvg, .table th.tinytable_css_k6t5uxxpgcjs62ms4cvg { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_go21m9gad0h7q2b8u7j8, .table th.tinytable_css_go21m9gad0h7q2b8u7j8 { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_flkgunhr33fch6r2q7mj, .table th.tinytable_css_flkgunhr33fch6r2q7mj { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_44nlewk4w7cos4k5eg1u, .table th.tinytable_css_44nlewk4w7cos4k5eg1u { text-align: center; } Color wheel difference Colorimeter difference + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 (Intercept) 0.251*** 0.067 (0.032) (0.043) wp_turbidity2 -0.037 0.307** (0.075) (0.099) wp_turbidity3 -0.171+ 0.052 (0.086) (0.110) wp_turbidity4 -0.051 -0.097 (0.255) (0.324) Num.Obs. 87 80 R2 Adj. 0.011 0.081 F 1.322 3.310 3.9 Colorimeter IDs and chlorine residual Code wp_test %&gt;% dplyr::filter(!is.na(meter_id)) %&gt;% group_by(meter_id) %&gt;% mutate(meter_id = paste0(meter_id, &quot; (N =&quot;, n(), &quot;)&quot;)) %&gt;% ggplot( aes( y = meter_id, x = meter_fcr ) ) + geom_boxplot() + facet_grid(rows = vars(country), scales = &quot;free&quot;) + theme + labs( y = NULL, x = &quot;Free chlorine residual (mg/L)&quot; ) Code wp_test %&gt;% dplyr::filter(!is.na(meter_id)) %&gt;% group_by(meter_id) %&gt;% mutate(meter_id = paste0(meter_id, &quot; (N =&quot;, n(), &quot;)&quot;)) %&gt;% ggplot( aes( y = meter_id, x = meter_tcr ) ) + geom_boxplot() + facet_grid(rows = vars(country), scales = &quot;free&quot;) + theme + labs( y = NULL, x = &quot;Total chlorine residual (mg/L)&quot; ) 3.10 Color disc IDs and chlorine residual Code wp_test %&gt;% dplyr::filter(!is.na(meter_id)) %&gt;% group_by(disc_id) %&gt;% mutate(disc_id = paste0(meter_id, &quot; (N =&quot;, n(), &quot;)&quot;)) %&gt;% ggplot( aes( y = disc_id, x = disc_fcr ) ) + geom_boxplot() + facet_grid(rows = vars(country), scales = &quot;free&quot;) + theme + labs( y = NULL, x = &quot;Free chlorine residual (mg/L)&quot; ) Code wp_test %&gt;% dplyr::filter(!is.na(meter_id)) %&gt;% group_by(disc_id) %&gt;% mutate(disc_id = paste0(meter_id, &quot; (N =&quot;, n(), &quot;)&quot;)) %&gt;% ggplot( aes( y = disc_id, x = disc_tcr ) ) + geom_boxplot() + facet_grid(rows = vars(country), scales = &quot;free&quot;) + theme + labs( y = NULL, x = &quot;Total chlorine residual (mg/L)&quot; ) 3.11 Enumerator IDs and chlorine residual "],["household-census.html", "4 Household census 4.1 Number of observations", " 4 Household census Code library(stringr) library(sf) library(tidyverse) library(modelsummary) library(fixest) Code hh_census &lt;- read_rds( file.path( path_box, &quot;Data&quot;, &quot;HouseholdCensus&quot;, &quot;DataSets&quot;, &quot;Final&quot;, &quot;hh-census.rds&quot; ) ) 4.1 Number of observations Code hh_census %&gt;% group_by(country) %&gt;% summarise( N = n(), `DSW (%)` = (mean(wp_dsw, na.rm = TRUE) * 100) %&gt;% round(1), `ILC (%)` = (mean(wp_ilc_device, na.rm = TRUE) * 100) %&gt;% round(1) ) ## # A tibble: 2 × 4 ## country N `DSW (%)` `ILC (%)` ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 MALAWI 1448 3.6 2.2 ## 2 UGANDA 3301 61.7 0.3 "],["household-survey.html", "5 Household survey 5.1 Number of observations", " 5 Household survey Code library(stringr) library(sf) library(tidyverse) library(modelsummary) library(fixest) Code hh_survey &lt;- read_rds( file.path( path_box, &quot;Data&quot;, &quot;HouseholdSurvey&quot;, &quot;DataSets&quot;, &quot;Final&quot;, &quot;hh-survey.rds&quot; ) ) %&gt;% dplyr::filter(promoter_household == 0) 5.1 Number of observations Code hh_survey %&gt;% group_by(country) %&gt;% summarise( N = n(), `Color wheel TCR &gt; 0.2` = mean(disctcr &gt; 0.2, na.rm = TRUE), `Color wheel FCR &gt; 0.2` = mean(discfcr &gt; 0.2, na.rm = TRUE), `Colorimeter TCR &gt; 0.2` = mean(metertcr &gt; 0.2, na.rm = TRUE), `Colorimeter FCR &gt; 0.2` = mean(meterfcr &gt; 0.2, na.rm = TRUE) ) %&gt;% mutate( across( -c(country, N), ~ paste0(round(. * 100, 1), &quot;%&quot;) ), across(everything(), ~ as.character(.)) ) %&gt;% pivot_longer(cols = -country) ## # A tibble: 5 × 3 ## country name value ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 MALAWI N 149 ## 2 MALAWI Color wheel TCR &gt; 0.2 21.9% ## 3 MALAWI Color wheel FCR &gt; 0.2 15.6% ## 4 MALAWI Colorimeter TCR &gt; 0.2 14.3% ## 5 MALAWI Colorimeter FCR &gt; 0.2 8.6% "],["monitoring-survey.html", "6 Monitoring survey 6.1 Number of observations", " 6 Monitoring survey Code library(stringr) library(sf) library(tidyverse) library(modelsummary) library(fixest) Code hh_survey &lt;- read_rds( file.path( path_box, &quot;Data&quot;, &quot;HouseholdSurvey&quot;, &quot;DataSets&quot;, &quot;Final&quot;, &quot;hh-survey.rds&quot; ) ) %&gt;% dplyr::filter(promoter_household == 1) 6.1 Number of observations Code hh_survey %&gt;% group_by(country) %&gt;% summarise( N = n(), `Color wheel TCR &gt; 0.2` = mean(disctcr &gt; 0.2, na.rm = TRUE), `Color wheel FCR &gt; 0.2` = mean(discfcr &gt; 0.2, na.rm = TRUE), `Colorimeter TCR &gt; 0.2` = mean(metertcr &gt; 0.2, na.rm = TRUE), `Colorimeter FCR &gt; 0.2` = mean(meterfcr &gt; 0.2, na.rm = TRUE) ) %&gt;% mutate( across( -c(country, N), ~ paste0(round(. * 100, 1), &quot;%&quot;) ), across(everything(), ~ as.character(.)) ) %&gt;% pivot_longer(cols = -country) ## # A tibble: 5 × 3 ## country name value ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 MALAWI N 5 ## 2 MALAWI Color wheel TCR &gt; 0.2 100% ## 3 MALAWI Color wheel FCR &gt; 0.2 100% ## 4 MALAWI Colorimeter TCR &gt; 0.2 50% ## 5 MALAWI Colorimeter FCR &gt; 0.2 50% "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
